'------------------------------------------------------------------------------
' <auto-generated>
'    Este código se generó a partir de una plantilla.
'
'    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq

Partial Public Class AcademiaEntities4
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=AcademiaEntities4")
    End Sub

    Public Sub New(ByVal conexion As String)
        MyBase.New(conexion)
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Property detailgroups() As DbSet(Of detailgroup)
    Public Property employees() As DbSet(Of employee)
    Public Property extra_payments() As DbSet(Of extra_payments)
    Public Property groups() As DbSet(Of group)
    Public Property inscripcions() As DbSet(Of inscripcion)
    Public Property laboratories() As DbSet(Of laboratory)
    Public Property payment_types() As DbSet(Of payment_types)
    Public Property payments() As DbSet(Of payment)
    Public Property programs() As DbSet(Of program)
    Public Property schedules_practice() As DbSet(Of schedules_practice)
    Public Property shares() As DbSet(Of share)
    Public Property students() As DbSet(Of student)
    Public Property tics() As DbSet(Of tic)
    Public Property type_employees() As DbSet(Of type_employees)
    Public Property users() As DbSet(Of user)

    Public Overridable Function IngresoUsuario(user As String, password As String, tipo As String, idEmpleado As Nullable(Of Integer)) As Integer
        Dim userParameter As ObjectParameter = If(user IsNot Nothing, New ObjectParameter("user", user), New ObjectParameter("user", GetType(String)))

        Dim passwordParameter As ObjectParameter = If(password IsNot Nothing, New ObjectParameter("password", password), New ObjectParameter("password", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("tipo", tipo), New ObjectParameter("tipo", GetType(String)))

        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("idEmpleado", idEmpleado), New ObjectParameter("idEmpleado", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("IngresoUsuario", userParameter, passwordParameter, tipoParameter, idEmpleadoParameter)
    End Function

    Public Overridable Function spIncripcion(idInscripcion As Nullable(Of Integer)) As ObjectResult(Of spIncripcion_Result)
        Dim idInscripcionParameter As ObjectParameter = If(idInscripcion.HasValue, New ObjectParameter("idInscripcion", idInscripcion), New ObjectParameter("idInscripcion", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spIncripcion_Result)("spIncripcion", idInscripcionParameter)
    End Function

    Public Overridable Function spMensualidad(idShare As Nullable(Of Integer), mes As String) As ObjectResult(Of spMensualidad_Result)
        Dim idShareParameter As ObjectParameter = If(idShare.HasValue, New ObjectParameter("idShare", idShare), New ObjectParameter("idShare", GetType(Integer)))

        Dim mesParameter As ObjectParameter = If(mes IsNot Nothing, New ObjectParameter("mes", mes), New ObjectParameter("mes", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spMensualidad_Result)("spMensualidad", idShareParameter, mesParameter)
    End Function

    Public Overridable Function spPagoExtra(idPago As Nullable(Of Integer), saldoAnterior As Nullable(Of Integer)) As ObjectResult(Of spPagoExtra_Result)
        Dim idPagoParameter As ObjectParameter = If(idPago.HasValue, New ObjectParameter("idPago", idPago), New ObjectParameter("idPago", GetType(Integer)))

        Dim saldoAnteriorParameter As ObjectParameter = If(saldoAnterior.HasValue, New ObjectParameter("saldoAnterior", saldoAnterior), New ObjectParameter("saldoAnterior", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spPagoExtra_Result)("spPagoExtra", idPagoParameter, saldoAnteriorParameter)
    End Function

End Class
